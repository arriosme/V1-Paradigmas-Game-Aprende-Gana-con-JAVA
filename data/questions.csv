Question;option1;option2;option3;option4;correcOptionIndex;
¿Qué es JAVA?;Java es un lenguaje de programación de alto nivel, multi-plataforma; Nombre de un café famoso; lenguaje de bajo nivel creado para compiladores; Herramienta que facilita el desarrollo para aplicaciones escritas en android;1
¿Cuáles son las características en JAVA?;Plataforma independiente; compilador Just In Time; Hilo múltiple; Todas las anteriores;4
¿Cómo permite Java un alto rendimiento?;Usa el compilador Just In Time para permitir un alto rendimiento;Sus archivos se compilan dependiendo si son requeridos ahorrando tiempo;  Emplea el compilador Just In Time para convertir el Código a lenguaje c; Se ejecuta del lado del cliente y no del servidor;1
¿Qué quieres decir con Constructor?;Persona que se dedica a la construcción; Método de inicialización de un programa; Es un método que tiene el mismo nombre que el nombre de la clase; Es un método que no se debe implementar;3
¿Qué son los IDE de Java?;Entornos de desarrollo con todo necesario para desarrollar software; programas que solo pueden compilar el Código fuente; Recursos cloud para java; Son frameworks que se emplean en Windows o mac;1
¿Qué se entiende por variable local?; variables estáticas que se pueden usar localmente en el computador ; variables que han existido dentro del propio método; variables que poseen el sufijo volátil; instancias de objetos;2
¿Qué se entiende por variable de instancia?;variables definidas dentro de un loop; variables que existen en toda la clase y se definen fuera de los métodos; variables con sufijo protected; Ninguna de las anteriores;2
¿Qué es una clase?;Es una plantilla para la creación de objetos; es una recolección de solo métodos estáticos que sirven para un fin; Es una serie de pasos y procesos para un fin; Tiene entradas y hace reprocesamiento de la información unicamente;1
¿Qué es un objeto?;Se define solamente dentro de la clase y fuera del método; Compilador de alto nivel que java emplea; Es una instancia de una clase. El objeto tiene estado y comportamiento. ; uno de los pilares del patrón POO;3
¿Beneficio de la herencia?;los códigos puedan ser reutilizados de una clase a otra; La clase super hereda el comportamiento de la otra clase; Evita el desbordamiento de la pila en una aplicación común; Es Código que ya está listo para usarse y se puede descargar y usar de manera gratuita ;1
¿Qué es la encapsulación?; Su propósito es proteger el Código mediante modificadores de acceso privados o protegidos; practica comúnmente empleada en sistemas de pequeña escala debido a sus malas prácticas; principio de no reutilización de Código fuente ;Modificadores de acceso públicos auditados;1
¿Los atributos y métodos privados se pueden heredar?;Si, si se hereda la clase se pueden utilizar; Si, mientras se esté dentro del mismo package; no, las variables nunca se pueden heredar; No, la herencia no aplica para ninguno;4
¿Qué es el polimorfismo?; Medida de un sistema complejo; Paradigma de programación creado para diseño de interfaces; método de enseñanza aplicado en la industria; Un solo objeto puede comportarse como muchos otros objetos;4
¿Cuál es el propósito de una variable transitoria?;Hacen parte del proceso de serialización; no son parte del proceso de serialización; se emplean como constantes dentro de un programa; se emplean para la declaración de métodos sincronos;2
¿Cuál es la desventaja de la sincronización? ;Reprocesamiento de flujos de trabajo; Comportamiento complejamente descoordinado; generación de Código basura; ralentiza a otros hilos que están esperando consumir un mismo servicio hasta su liberación;4
¿Qué es SerialVersionUID?; Número serial del computador donde está la jvm; Número de compilador que se requiere para trabajar con java desde JAVA 1.6+; número de ID de versión para la clase de objeto; Código de parada de la maquina si ocurre una excepción ;3
¿Qué hace el método yield de la clase Thread?; mueve el hilo que está en ejecución a un estado ejecutable ; para el hilo principal que se esté ejecutando; genera una unión entre dos hilos secundarios; se implementa para el control de las transacciones de por ejemplo un banco;1
¿Cuáles son las diferentes formas de manejar las excepciones?;Usando try / catch o declarar throws keyword; implementando la interfaz Executable; Declararando new Exception; Heredando de la clase ObjectException del paquete java.lang;1
¿Cómo se hace un hilo en Java?; Implementando Runnable solamente; Usar Runaway como solución; implementando Synchronized;Extender la clase Thread o implementando Runnable;4
ciclo de vida del hilo en Java. elije tres estados; new, runnable y Terminated; Start,Stop y pending; new, Start y Blokecd; new, synchronous y asynchronous;1
Diferencia entre HashMap y HashTable.; Ninguna, ambos grafos se comportan igual; HashTable es más lento que HashMap; HashMap es más lento que HashTable; Son listas diferentes que emplean un enumerador;3
